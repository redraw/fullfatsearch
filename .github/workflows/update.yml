name: Update

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 6 * * *"  # 6am
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            youtube.db
            ~/.cache
          key: ${{ runner.os }}-yt-supercut-${{ hashFiles('stats.json')}}
          restore-keys: |
            ${{ runner.os }}-yt-supercut

      - name: Instalar deps
        run: |
          pip install -U pipx pyyaml
          pip install -U yt-supercut
          pip install -U yt-dlp
          pipx install datasette
          datasette install datasette-publish-fly

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Tailscale
        uses: tailscale/github-action@v3
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:fullfatsearch

      - name: Set Tailscale exit node
        run: |
          set -e
          EXIT_NODE=$(tailscale exit-node suggest | grep -oP "(?<=Suggested exit node: )[^ ]+")
          echo $EXIT_NODE
          sudo tailscale set --exit-node $EXIT_NODE

      - name: Index
        id: index
        run: |
          yt-supercut index https://www.youtube.com/@CirculoVicioso8/streams --lang es
          yt-supercut stats --format json > stats.json

      - name: Clean
        env:
          EXCLUDE: ${{ secrets.EXCLUDE }}
        run: |
          python -m scripts.clean youtube.db

      - name: Commit and push if it changed
        id: commit
        run: |-
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add stats.json
          title=$(sqlite-utils youtube.db -r "select video_title from videos order by upload_date desc limit 1")
          git commit -m "Ultimo video indexado: ${title}" || exit 0
          git push -f
          echo deploy=1 >> $GITHUB_OUTPUT

      - name: Deploy
        if: steps.commit.outputs.deploy == '1' || contains(github.event.head_commit.message, '[deploy]')
        env:
          FLY_ACCESS_TOKEN: ${{ secrets.FLY_ACCESS_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |-
          datasette publish fly youtube.db \
            -m datasette.yaml \
            --app $REPO_NAME \
            --install datasette-youtube-embed \
            --install datasette-block-robots \
            --install datasette-homepage-table

      - name: Vectorize
        run: |
          yt-supercut build-transcripts --output data
          git ls-files -o data | xargs python -m scripts.vectorize
        env:
          QDRANT_COLLECTION_NAME: fullfatvector
          QDRANT_LOCATION: ${{ secrets.QDRANT_LOCATION }}
          QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
